//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace App.Web.ServicioCuentasUsuarios {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServicioCuentasUsuarios.IServicioCuentasUsuarios")]
    public interface IServicioCuentasUsuarios {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioCuentasUsuarios/ValidarCredenciales", ReplyAction="http://tempuri.org/IServicioCuentasUsuarios/ValidarCredencialesResponse")]
        bool ValidarCredenciales(string usuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioCuentasUsuarios/ValidarCredenciales", ReplyAction="http://tempuri.org/IServicioCuentasUsuarios/ValidarCredencialesResponse")]
        System.Threading.Tasks.Task<bool> ValidarCredencialesAsync(string usuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioCuentasUsuarios/RegistrarUsuarioNuevo", ReplyAction="http://tempuri.org/IServicioCuentasUsuarios/RegistrarUsuarioNuevoResponse")]
        bool RegistrarUsuarioNuevo(string usuario, string contraseña);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServicioCuentasUsuarios/RegistrarUsuarioNuevo", ReplyAction="http://tempuri.org/IServicioCuentasUsuarios/RegistrarUsuarioNuevoResponse")]
        System.Threading.Tasks.Task<bool> RegistrarUsuarioNuevoAsync(string usuario, string contraseña);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServicioCuentasUsuariosChannel : App.Web.ServicioCuentasUsuarios.IServicioCuentasUsuarios, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServicioCuentasUsuariosClient : System.ServiceModel.ClientBase<App.Web.ServicioCuentasUsuarios.IServicioCuentasUsuarios>, App.Web.ServicioCuentasUsuarios.IServicioCuentasUsuarios {
        
        public ServicioCuentasUsuariosClient() {
        }
        
        public ServicioCuentasUsuariosClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServicioCuentasUsuariosClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioCuentasUsuariosClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServicioCuentasUsuariosClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool ValidarCredenciales(string usuario, string contraseña) {
            return base.Channel.ValidarCredenciales(usuario, contraseña);
        }
        
        public System.Threading.Tasks.Task<bool> ValidarCredencialesAsync(string usuario, string contraseña) {
            return base.Channel.ValidarCredencialesAsync(usuario, contraseña);
        }
        
        public bool RegistrarUsuarioNuevo(string usuario, string contraseña) {
            return base.Channel.RegistrarUsuarioNuevo(usuario, contraseña);
        }
        
        public System.Threading.Tasks.Task<bool> RegistrarUsuarioNuevoAsync(string usuario, string contraseña) {
            return base.Channel.RegistrarUsuarioNuevoAsync(usuario, contraseña);
        }
    }
}
